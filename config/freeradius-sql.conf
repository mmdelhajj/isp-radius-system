# FreeRADIUS SQL Module Configuration
# Configuration file for PostgreSQL integration

sql {
    driver = "rlm_sql_postgresql"
    dialect = "postgresql"
    
    # Connection info
    server = "localhost"
    port = 5432
    login = "radiususer"
    password = "your_secure_password_here"
    radius_db = "radiusdb"
    
    # Table names
    acct_table1 = "radacct"
    acct_table2 = "radacct"
    postauth_table = "radpostauth"
    authcheck_table = "radcheck"
    groupcheck_table = "radgroupcheck"
    authreply_table = "radreply"
    groupreply_table = "radgroupreply"
    usergroup_table = "radusergroup"
    
    # Enable group and profile reading
    read_groups = yes
    read_profiles = yes
    
    # Connection pool settings
    pool {
        start = 1
        min = 0
        max = 32
        spare = 3
        uses = 0
        retry_delay = 30
        lifetime = 0
        idle_timeout = 60
    }
    
    # Query configuration
    safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /"
    
    # Accounting queries
    accounting {
        reference = "%{tolower:type.%{Acct-Status-Type}.query}"
        
        type {
            accounting-on {
                query = "\
                    UPDATE ${....acct_table1} \
                    SET \
                        acctstoptime       = TO_TIMESTAMP(${....event_timestamp_epoch}), \
                        acctterminatecause = '%{%{Acct-Terminate-Cause}:-NAS-Reboot}' \
                    WHERE acctstoptime IS NULL \
                    AND nasipaddress   = '%{NAS-IP-Address}' \
                    AND acctstarttime <= TO_TIMESTAMP(${....event_timestamp_epoch})"
            }
            
            accounting-off {
                query = "${..accounting-on.query}"
            }
            
            start {
                query = "\
                    INSERT INTO ${....acct_table1} \
                        (acctsessionid,     acctuniqueid,      username, \
                         realm,             nasipaddress,      nasportid, \
                         nasporttype,       acctstarttime,     acctupdatetime, \
                         acctstoptime,      acctsessiontime,   acctauthentic, \
                         connectinfo_start, connectinfo_stop,  acctinputoctets, \
                         acctoutputoctets,  calledstationid,   callingstationid, \
                         acctterminatecause, servicetype,      framedprotocol, \
                         framedipaddress) \
                    VALUES \
                        ('%{Acct-Session-Id}', '%{Acct-Unique-Session-Id}', '%{SQL-User-Name}', \
                         '%{Realm}', '%{NAS-IP-Address}', '%{%{NAS-Port-ID}:-%{NAS-Port}}', \
                         '%{NAS-Port-Type}', TO_TIMESTAMP(${....event_timestamp_epoch}), TO_TIMESTAMP(${....event_timestamp_epoch}), \
                         NULL, 0, '%{Acct-Authentic}', \
                         '%{Connect-Info}', '', 0, \
                         0, '%{Called-Station-Id}', '%{Calling-Station-Id}', \
                         '', '%{Service-Type}', '%{Framed-Protocol}', \
                         '%{Framed-IP-Address}')"
            }
            
            interim-update {
                query = "\
                    UPDATE ${....acct_table1} SET \
                        acctupdatetime     = TO_TIMESTAMP(${....event_timestamp_epoch}), \
                        acctinterval       = (${....event_timestamp_epoch} - EXTRACT(epoch FROM(acctstarttime))), \
                        acctinputoctets    = '%{%{Acct-Input-Gigawords}:-0}' << 32 | '%{%{Acct-Input-Octets}:-0}', \
                        acctoutputoctets   = '%{%{Acct-Output-Gigawords}:-0}' << 32 | '%{%{Acct-Output-Octets}:-0}' \
                    WHERE acctsessionid = '%{Acct-Session-Id}' \
                    AND username        = '%{SQL-User-Name}' \
                    AND nasipaddress    = '%{NAS-IP-Address}'"
            }
            
            stop {
                query = "\
                    UPDATE ${....acct_table2} SET \
                        acctstoptime       = TO_TIMESTAMP(${....event_timestamp_epoch}), \
                        acctsessiontime    = ${....event_timestamp_epoch} - EXTRACT(epoch FROM(acctstarttime)), \
                        acctinputoctets    = '%{%{Acct-Input-Gigawords}:-0}' << 32 | '%{%{Acct-Input-Octets}:-0}', \
                        acctoutputoctets   = '%{%{Acct-Output-Gigawords}:-0}' << 32 | '%{%{Acct-Output-Octets}:-0}', \
                        acctterminatecause = '%{Acct-Terminate-Cause}', \
                        connectinfo_stop   = '%{Connect-Info}' \
                    WHERE acctsessionid = '%{Acct-Session-Id}' \
                    AND username        = '%{SQL-User-Name}' \
                    AND nasipaddress    = '%{NAS-IP-Address}'"
            }
        }
    }
    
    # Post-authentication logging
    post-auth {
        query = "\
            INSERT INTO ${..postauth_table} \
                (username, pass, reply, authdate) \
            VALUES \
                ('%{SQL-User-Name}', \
                 '%{%{User-Password}:-%{Chap-Password}}', \
                 '%{reply:Packet-Type}', \
                 NOW())"
    }
}

